name: Prerelease Status Check

on:
  # See docs
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
  # This will run the job on pull request that is opened or reopened
  push:
  pull_request:
    types: [opened, reopened]
  # Allows one to manually run workflow from UI
  workflow_dispatch:
env:
  FOO: bar
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.job1.outputs.matrix)}}
    steps:
      - run: echo ...
  validate-env-vars:
    runs-on: ubuntu-latest
    env:
      LITERAL: whatever
      INTERPOLATION: ${{ github.ref_name }}
      EXPRESSION: $(echo ${{ github.ref_name }} | perl -pe 's/[^a-zA-Z0-9]+/-/g' | perl -pe 's/(\A-|-\Z)//g' | awk '{print tolower($0)}')
    steps:
      - name: Print Global Environment Variables
        run: echo $FOO
      - name: Print Job Environment Variables
        run: |
          echo ${{ env.LITERAL }}
          echo ${{ env.INTERPOLATION }}
          echo ${{ env.EXPRESSION }}
          echo $LITERAL
          echo $INTERPOLATION
          echo $EXPRESSION
      - name: Print Step Environment Variables
        env:
          STEPVAR: my step
        run: |
          echo ${{ env.STEPVAR }}
          echo $STEPVAR
  testPackagejson:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Read Package json File
        run: |
          content=`cat package.json`
          # the following lines are only required for multi line json
          # content="${content//'%'/'%25'}"
          # content="${content//$'\n'/'%0A'}"
          # content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::${content//'%'/'%25'}"
  readfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Read Package json second
        run: |
          githubjson=`cat package.json`
          echo $githubjson
          number=`echo $(jq -r '.number' <<< "$githubjson")`
          PRTitle=`echo $(jq -r '.pull_request.title' <<< "$githubjson")`
          PRUrl=`echo $(jq -r '.pull_request.html_url' <<< "$githubjson")`
          PRBody=`echo $(jq -r '.pull_request.body' <<< "$githubjson")`
  job3:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          JSON=$(cat package.json)
          echo "::set-output name=matrix::${JSON//'%'/'%25'}"
  job4:
    needs: job3
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.job1.outputs.matrix)}}
    steps:
      - name: Print package Json content
        run: |
          echo "${{fromJson(steps.set_var.outputs.matrix)}}"
      - name: Terminate
        run: echo ...

