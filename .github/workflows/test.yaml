name: Test linux job
on:
  push

jobs:
  testJob:
    name: Test
    runs-on: ubuntu-latest
    outputs:
      packageJson: ${{ steps.set_var.outputs.packageJson }}
    steps:
      - uses: actions/checkout@v2
      - id: set_var
        run: |
          content=`cat package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
      - run: |
          echo "${{fromJson(steps.set_var.outputs.packageJson).version}}"
          echo "${{fromJson(steps.set_var.outputs.packageJson).devDependencies}}"
  testJob2:
    needs: testJob
    runs-on: ubuntu-latest
    outputs:
      packageJson: ${{ steps.set_var.outputs.nomatch }}
    steps:
      - name: Print package Json content
        run: |
          echo "${{ fromJson(needs.testJob.outputs.packageJson).devDependencies.jest}}"
          echo "${{ fromJson(needs.testJob.outputs.packageJson).devDependencies['@fattmerchantorg/types-engine']}}"
      - name: Check Prerelease
        id: check-prerelease
        run: |
          if ${{ contains(fromJson(needs.testJob.outputs.packageJson).devDependencies['@fattmerchantorg/types-engine'], '-') ||
           contains(fromJson(needs.testJob.outputs.packageJson).devDependencies['@fattmerchantorg/types-finix'], '-')
           || contains(fromJson(needs.testJob.outputs.packageJson).devDependencies['@fattmerchantorg/types-omni'], '-')
           }}; then
            echo "There is a prerelease found in this PR"
            exit 1
          else
            echo ::set-output name=nomatch::true
          fi
      - name: Finalize Prerelease Status Check
        if: steps.check-prerelease.outputs.nomatch == 'true'
        run: |
          echo "There is no prerelease in this PR"
